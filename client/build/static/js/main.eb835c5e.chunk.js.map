{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/index.js","components/DeleteBtn/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","className","href","Jumbotron","children","style","height","clear","paddingTop","textAlign","DeleteBtn","props","role","tabIndex","axios","get","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","FormBtn","float","marginBottom","Search","useState","books","setBooks","search","formObject","setFormObject","useEffect","API","then","res","data","catch","err","console","log","onChange","event","target","name","value","placeholder","disabled","onClick","length","book","_id","title","author","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAYeA,MAVf,WACE,OACE,qBAAKC,UAAU,iDAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oC,qBCQSC,MAXf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,qBACEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjER,UAAU,YAFZ,SAIGG,K,MCKQM,MARf,SAAmBC,GACjB,OACE,8CAAMV,UAAU,cAAiBU,GAAjC,IAAwCC,KAAK,SAASC,SAAS,IAA/D,sB,gBCLW,EAEH,WACR,OAAOC,IAAMC,IAAI,eCAd,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOb,EAAY,EAAZA,SACjC,OAAO,qBAAKH,UAAS,mBAAcgB,EAAQ,SAAW,IAA/C,SAAsDb,IAIxD,SAASc,EAAT,GAAmC,IAApBD,EAAmB,EAAnBA,MAAOb,EAAY,EAAZA,SAC3B,OAAO,qBAAKH,UAAS,aAAQgB,EAAQ,SAAW,IAAzC,SAAgDb,IAKlD,SAASe,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAMhB,EAAY,EAAZA,SAC1B,OACE,qBACEH,UAAWmB,EACRC,MAAM,KACNC,KAAI,SAAAF,GAAI,MAAI,OAASA,KACrBG,KAAK,KAJV,SAMGnB,I,MCnBA,SAASoB,EAAT,GAA6B,IAAbpB,EAAY,EAAZA,SACrB,OACE,qBAAKH,UAAU,0BAAf,SACE,oBAAIA,UAAU,aAAd,SAA4BG,MAK3B,SAASqB,EAAT,GAAiC,IAAbrB,EAAY,EAAZA,SACzB,OAAO,oBAAIH,UAAU,kBAAd,SAAiCG,ICVnC,SAASsB,EAAMf,GACpB,OACE,qBAAKV,UAAU,aAAf,SACE,mCAAOA,UAAU,gBAAmBU,MAKnC,SAASgB,EAAQhB,GACtB,OACE,kDACMA,GADN,IAEEN,MAAO,CAAEuB,MAAO,QAASC,aAAc,IACvC5B,UAAU,kBAHZ,SAKGU,EAAMP,YC4EE0B,MArFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBACA,GADA,UACoCA,mBAAS,CAC3CG,OAAQ,MADV,mBAAOC,EAAP,KAAmBC,EAAnB,KA6BA,OAxBAC,qBAAU,WAMRC,IACGC,MAAK,SAACC,GAAD,OAASP,EAASO,EAAIC,SAC3BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAN7B,IAuBD,cAAC3B,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAD,WACE,eAACC,EAAD,CAAKC,KAAK,QAAV,UACE,cAAC,EAAD,UACE,+CAEF,iCACE,cAACM,EAAD,CACEoB,SArBZ,SAA2BC,GACzB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdd,EAAc,2BAAKD,GAAN,kBAAmBc,EAAOC,MAoB7BD,KAAK,SACLE,YAAY,WAEd,cAACxB,EAAD,CACEyB,UAAWjB,EAAWD,OACtBmB,QAAS,aAFX,0BAUJ,eAAClC,EAAD,CAAKC,KAAK,QAAV,UACE,cAAC,EAAD,UACE,2CAEDY,EAAMsB,OACL,cAAC9B,EAAD,UACGQ,EAAMV,KAAI,SAACiC,GACV,OACE,eAAC9B,EAAD,WACE,mBAAGvB,KAAM,UAAYqD,EAAKC,IAA1B,SACE,mCACGD,EAAKE,MADR,OACmBF,EAAKG,YAG1B,cAAC,EAAD,CAAWL,QAAS,iBANPE,EAAKC,UAa1B,gEC1EGG,MATf,WACE,OACE,sBAAK1D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIS2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb835c5e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        Google Books Search\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      âœ—\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button\n      {...props}\n      style={{ float: \"right\", marginBottom: 10 }}\n      className=\"btn btn-success\"\n    >\n      {props.children}\n    </button>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport API from \"../utils/API\";\nimport GoogleAPI from \"../utils/GoogleAPI\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\nimport BookContext from \"../utils/BookContext\";\n\nfunction Search() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [book, setBook] = useState({});\n  const [formObject, setFormObject] = useState({\n    search: \"\",\n  });\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then((res) => setBooks(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // handle search submit\n  // ->GoogleAPI call function\n\n  // handle save submit\n  // ->post book to DB\n  // ->set book context?\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Book Search</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"search\"\n              placeholder=\"Search\"\n            />\n            <FormBtn\n              disabled={!formObject.search}\n              onClick={() => {\n                /*handle search submit*/\n              }}\n            >\n              Search\n            </FormBtn>\n          </form>\n        </Col>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>Results</h1>\n          </Jumbotron>\n          {books.length ? (\n            <List>\n              {books.map((book) => {\n                return (\n                  <ListItem key={book._id}>\n                    <a href={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </a>\n                    <DeleteBtn onClick={() => {}} />\n                    {/* save button  */}\n                  </ListItem>\n                );\n              })}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Search;\n","import \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Search from \"./pages/Search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}